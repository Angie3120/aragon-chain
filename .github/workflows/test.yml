name: Tests / Code Coverage
#  Tests / Code Coverage workflow runs unit tests and uploads a code coverage report
#  This workflow is run on pushes to development & every Pull Requests where a .go, .mod, .sum, .sol have been changed
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  test-coverage-upload:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: technote-space/get-diff-action@v3.2
        id: git_diff
        with:
          SUFFIX_FILTER: |
            .go
            .mod
            .sum
            .sol
      - uses: codecov/codecov-action@v1
        with:
          file: ./coverage.txt
          fail_ci_if_error: true
        if: "env.GIT_DIFF != ''"
      - name: test & coverage report creation
        run: |
          set -e
          echo "" > coverage.txt
          for d in $(go list ./... | grep -v vendor); do
              go test -mod=readonly -timeout 10m -coverprofile=profile.out -covermode=atomic $d
              if [ -f profile.out ]; then
                  cat profile.out >> coverage.txt
                  rm profile.out
              fi
          done
